{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\westb\\\\Documents\\\\PROJET\\\\FuelTracker\\\\client_web\\\\src\\\\components\\\\PersonalRoute\\\\index.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { Session } from '../../utils';\n\nconst PublicRoute = ({\n  component,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !Session.getStayConnected() ? /*#__PURE__*/React.createElement(\"component\", Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/home'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst PrivateRoute = ({\n  component,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => Session.getStayConnected() ? /*#__PURE__*/React.createElement(\"component\", Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { PublicRoute, PrivateRoute };","map":{"version":3,"sources":["C:/Users/westb/Documents/PROJET/FuelTracker/client_web/src/components/PersonalRoute/index.jsx"],"names":["React","Route","Redirect","Session","PublicRoute","component","rest","props","getStayConnected","pathname","PrivateRoute","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAY,KAAGC;AAAf,CAAD,KAA0B;AAC1C,sBACI,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EACDC,KAAD,IAAW,CAACJ,OAAO,CAACK,gBAAR,EAAD,gBACP,mDAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADO,gBAEP,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH,CAXD;;AAaA,MAAMC,YAAY,GAAG,CAAC;AAAEL,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AAC7C,sBACI,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EACDC,KAAD,IAAWJ,OAAO,CAACK,gBAAR,kBACP,mDAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADO,gBAEP,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE,QAAZ;AAAsBE,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAA7B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH,CAXD;;AAaA,SAAQT,WAAR,EAAqBM,YAArB","sourcesContent":["import React from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nimport {Session} from '../../utils'\r\n\r\n\r\nconst PublicRoute = ({component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                (props) => !Session.getStayConnected() ?\r\n                    <component {...props} /> :\r\n                    <Redirect to={{ pathname: '/home' }} />\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nconst PrivateRoute = ({ component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                (props) => Session.getStayConnected() ?\r\n                    <component {...props} /> :\r\n                    <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nexport {PublicRoute, PrivateRoute}"]},"metadata":{},"sourceType":"module"}