{"ast":null,"code":"class Session {\n  constructor() {\n    this.getId = () => sessionStorage.getItem('id');\n\n    this.setId = id => sessionStorage.setItem('id', id);\n\n    this.deleteId = () => sessionStorage.removeItem('id');\n\n    this.clean = () => {\n      this.deleteId();\n      sessionStorage.clear();\n    };\n  }\n\n}\n\nclass User {\n  constructor() {\n    this.findAll = () => this.users;\n\n    this.findById = id => this.users[this.users.findIndex(elt => elt.id === id)];\n\n    this.findByToken = token => this.users[this.users.findIndex(elt => elt.token === token)];\n\n    this._findByLogin = username => this.users[this.users.findIndex(elt => elt.username === username)];\n\n    this._findByEmail = email => this.users[this.users.findIndex(elt => elt.email === email)];\n\n    this.login = ([field, is_email], password, session) => {\n      const userLogged = is_email ? this._findByEmail(field) : this._findByLogin(field);\n\n      if (!!userLogged && userLogged.password === password) {\n        session.setId(userLogged.id);\n        return {\n          response: true,\n          message: `Bon retour parmi nous ${userLogged.nom}`\n        };\n      }\n\n      return {\n        response: false,\n        message: !!userLogged ? \"Mot de passe incorrect\" : \"Nom d'utilisateur ou Email incorrect\"\n      };\n    };\n\n    this.logout = () => sessionStorage.removeItem('id');\n\n    this.passwordReset = email => console.log(\"Mot de passe changé\");\n\n    this.users = [{\n      id: 1,\n      token: \"token 1\",\n      username: \"admin\",\n      password: \"admin\",\n      email: \"email@email.com\",\n      nom: \"nom admin\",\n      prenom: \"prenom admin\",\n      pays: \"Cameroun\",\n      adresse: \"adresse admin\",\n      statut: true,\n      role: \"ADMIN\"\n    }, {\n      id: 6,\n      token: \"token 6\",\n      username: \"westbook\",\n      password: \"77539953\",\n      email: \"westbook90@email.com\",\n      nom: \"SOCGNA\",\n      prenom: \"Childéric\",\n      pays: \"Cameroun\",\n      adresse: \"Yaoundé 345125, Nsimeyoung\",\n      statut: true,\n      role: \"ADMIN\"\n    }, {\n      id: 2,\n      token: \"token 2\",\n      username: \"username 2\",\n      password: \"password 2\",\n      email: \"email2@email.com\",\n      nom: \"nom 2\",\n      prenom: \"prenom 2\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 2\",\n      statut: true,\n      role: \"USER\"\n    }, {\n      id: 3,\n      token: \"token 3\",\n      username: \"username 3\",\n      password: \"password 3\",\n      email: \"email3@email.com\",\n      nom: \"nom 3\",\n      prenom: \"prenom 3\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 3\",\n      statut: true,\n      role: \"USER\"\n    }, {\n      id: 4,\n      username: \"username 4\",\n      password: \"password 4\",\n      token: \"token 4\",\n      nom: \"nom 4\",\n      prenom: \"prenom 4\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 4\",\n      statut: true,\n      role: \"USER\"\n    }, {\n      id: 5,\n      username: \"username 5\",\n      password: \"password 5\",\n      token: \"token 5\",\n      nom: \"nom 5\",\n      prenom: \"prenom 5\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 5\",\n      statut: true,\n      role: \"USER\"\n    }];\n  }\n\n}\n\nexport { User, Session };","map":{"version":3,"sources":["C:/Users/westb/Documents/PROJET/FuelTracker/client_web/src/utils/Data.js"],"names":["Session","getId","sessionStorage","getItem","setId","id","setItem","deleteId","removeItem","clean","clear","User","constructor","findAll","users","findById","findIndex","elt","findByToken","token","_findByLogin","username","_findByEmail","email","login","field","is_email","password","session","userLogged","response","message","nom","logout","passwordReset","console","log","prenom","pays","adresse","statut","role"],"mappings":"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","sourcesContent":["\r\nclass Session {\r\n\r\n    // retourne the token de la session storage\r\n    getId = () => sessionStorage.getItem('id');\r\n\r\n    // modifie le token et l'utilisateur de la session storage\r\n    setId = (id) => sessionStorage.setItem('id', id);\r\n\r\n    // retourne the token de la session storage\r\n    deleteId = () => sessionStorage.removeItem('id');\r\n\r\n    // retire le token et l'utilisateur de la session storage\r\n    clean = () => {\r\n        this.deleteId();\r\n        sessionStorage.clear();\r\n    }\r\n\r\n}\r\n\r\n\r\nclass User {\r\n    constructor() {\r\n        this.users = [\r\n            {\r\n                id: 1, token: \"token 1\",\r\n                username: \"admin\", password: \"admin\", email:\"email@email.com\",\r\n                nom: \"nom admin\", prenom: \"prenom admin\",\r\n                pays: \"Cameroun\", adresse: \"adresse admin\",\r\n                statut: true, role: \"ADMIN\"\r\n            },\r\n\r\n            {\r\n                id: 6, token: \"token 6\",\r\n                username: \"westbook\", password: \"77539953\", email:\"westbook90@email.com\",\r\n                nom: \"SOCGNA\", prenom: \"Childéric\",\r\n                pays: \"Cameroun\", adresse: \"Yaoundé 345125, Nsimeyoung\",\r\n                statut: true, role: \"ADMIN\"\r\n            },\r\n\r\n            {\r\n                id: 2, token: \"token 2\",\r\n                username: \"username 2\", password: \"password 2\", email:\"email2@email.com\",\r\n                nom: \"nom 2\", prenom: \"prenom 2\",\r\n                pays: \"Cameroun\", adresse: \"adresse 2\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n\r\n            {\r\n                id: 3, token: \"token 3\",\r\n                username: \"username 3\", password: \"password 3\", email:\"email3@email.com\",\r\n                nom: \"nom 3\", prenom: \"prenom 3\",\r\n                pays: \"Cameroun\", adresse: \"adresse 3\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n\r\n            {\r\n                id: 4, username: \"username 4\", password: \"password 4\", token: \"token 4\",\r\n                nom: \"nom 4\", prenom: \"prenom 4\", pays: \"Cameroun\", adresse: \"adresse 4\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n\r\n            {\r\n                id: 5, username: \"username 5\", password: \"password 5\", token: \"token 5\",\r\n                nom: \"nom 5\", prenom: \"prenom 5\", pays: \"Cameroun\", adresse: \"adresse 5\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n        ]\r\n    }\r\n\r\n    findAll = () => this.users;\r\n\r\n    findById = id => this.users[this.users.findIndex(elt => elt.id === id)];\r\n\r\n    findByToken = token => this.users[this.users.findIndex(elt => elt.token === token)];\r\n\r\n    _findByLogin = (username) => this.users[this.users.findIndex(elt => elt.username === username)];\r\n    _findByEmail = (email) => this.users[this.users.findIndex(elt => elt.email === email)];\r\n\r\n    login = ([field, is_email], password, session) => {\r\n        const userLogged = is_email ? this._findByEmail(field) : this._findByLogin(field);\r\n        if (!!userLogged && userLogged.password === password){\r\n            session.setId(userLogged.id);\r\n            return {response: true, message: `Bon retour parmi nous ${userLogged.nom}`}\r\n        }\r\n        return {response: false, message: !!userLogged ? \"Mot de passe incorrect\" : \"Nom d'utilisateur ou Email incorrect\"}\r\n    };\r\n\r\n    logout = () => sessionStorage.removeItem('id');\r\n\r\n    passwordReset = email => console.log(\"Mot de passe changé\")\r\n}\r\n\r\n\r\nexport {User, Session}"]},"metadata":{},"sourceType":"module"}