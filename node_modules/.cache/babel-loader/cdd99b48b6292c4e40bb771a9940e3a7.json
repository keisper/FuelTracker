{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\westb\\\\Documents\\\\PROJET\\\\FuelTracker\\\\client_web\\\\src\\\\components\\\\PersonalRoute\\\\index.jsx\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { DataSessionContext } from '../../utils';\n\nconst PublicRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const manageSession = useContext(DataSessionContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !manageSession.getUID() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/home'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const manageSession = useContext(DataSessionContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => manageSession.getUID() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/login'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { PublicRoute, PrivateRoute };","map":{"version":3,"sources":["C:/Users/westb/Documents/PROJET/FuelTracker/client_web/src/components/PersonalRoute/index.jsx"],"names":["React","useContext","Route","Redirect","DataSessionContext","PublicRoute","component","Component","rest","manageSession","props","getUID","pathname","PrivateRoute"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AAEA,SAAQC,kBAAR,QAAiC,aAAjC;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACvD,QAAMC,aAAa,GAAGR,UAAU,CAACG,kBAAD,CAAhC;AACA,sBACI,oBAAC,KAAD,oBACQI,IADR;AAEI,IAAA,MAAM,EACFE,KAAK,IAAI,CAACD,aAAa,CAACE,MAAd,EAAD,gBACL,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADK,gBAEL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH,CAZD;;AAcA,MAAMC,YAAY,GAAG,CAAC;AAAEP,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACxD,QAAMC,aAAa,GAAGR,UAAU,CAACG,kBAAD,CAAhC;AACA,sBACI,oBAAC,KAAD,oBACQI,IADR;AAEI,IAAA,MAAM,EACFE,KAAK,IAAID,aAAa,CAACE,MAAd,kBACL,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADK,gBAEL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH,CAZD;;AAcA,SAAQP,WAAR,EAAqBQ,YAArB","sourcesContent":["import React, {useContext} from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nimport {DataSessionContext} from '../../utils'\r\n\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    const manageSession = useContext(DataSessionContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                props => !manageSession.getUID() ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to={{ pathname: '/home' }} />\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const manageSession = useContext(DataSessionContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                props => manageSession.getUID() ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to={{ pathname: '/login' }} />\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nexport {PublicRoute, PrivateRoute}"]},"metadata":{},"sourceType":"module"}