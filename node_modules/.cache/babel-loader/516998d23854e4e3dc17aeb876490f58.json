{"ast":null,"code":"class Session {}\n\nSession.getId = () => sessionStorage.getItem('id') || null;\n\nSession.getStayConnected = () => sessionStorage.getItem('stay');\n\nSession.setId = id => sessionStorage.setItem('id', id);\n\nSession.setStayConnected = () => sessionStorage.setItem('stay', \"true\");\n\nSession.clean = () => sessionStorage.clear();\n\nclass User {\n  constructor() {\n    this.findAll = () => this.users;\n\n    this.findById = id => this.users[this.users.findIndex(elt => elt.id === id)];\n\n    this.findByToken = token => this.users[this.users.findIndex(elt => elt.token === token)];\n\n    this._findByLogin = username => this.users[this.users.findIndex(elt => elt.username === username)];\n\n    this._findByEmail = email => this.users[this.users.findIndex(elt => elt.email === email)];\n\n    this.login = ([field, is_email], password, stay) => {\n      const userLogged = is_email ? this._findByEmail(field) : this._findByLogin(field);\n\n      if (!!userLogged && userLogged.password === password) {\n        if (stay) {\n          Session.setStayConnected();\n          Session.setId(userLogged.id);\n        }\n\n        return {\n          response: true,\n          message: `Bon retour parmi nous ${userLogged.nom}`\n        };\n      }\n\n      return {\n        response: false,\n        message: !!userLogged ? \"Mot de passe incorrect\" : \"Nom d'utilisateur ou Email incorrect\"\n      };\n    };\n\n    this.logout = () => Session.clean();\n\n    this.passwordReset = email => console.log(\"Mot de passe changé\");\n\n    this.users = [{\n      id: 1,\n      username: \"admin\",\n      password: \"admin\",\n      token: \"token 1\",\n      nom: \"nom admin\",\n      prenom: \"prenom admin\",\n      pays: \"Cameroun\",\n      adresse: \"adresse admin\",\n      statut: true,\n      role: \"ADMIN\"\n    }, {\n      id: 2,\n      username: \"username 2\",\n      password: \"password 2\",\n      token: \"token 2\",\n      nom: \"nom 2\",\n      prenom: \"prenom 2\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 2\",\n      statut: true,\n      role: \"USER\"\n    }, {\n      id: 3,\n      username: \"username 3\",\n      password: \"password 3\",\n      token: \"token 3\",\n      nom: \"nom 3\",\n      prenom: \"prenom 3\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 3\",\n      statut: true,\n      role: \"USER\"\n    }, {\n      id: 4,\n      username: \"username 4\",\n      password: \"password 4\",\n      token: \"token 4\",\n      nom: \"nom 4\",\n      prenom: \"prenom 4\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 4\",\n      statut: true,\n      role: \"USER\"\n    }, {\n      id: 5,\n      username: \"username 5\",\n      password: \"password 5\",\n      token: \"token 5\",\n      nom: \"nom 5\",\n      prenom: \"prenom 5\",\n      pays: \"Cameroun\",\n      adresse: \"adresse 5\",\n      statut: true,\n      role: \"USER\"\n    }];\n  }\n\n}\n\nexport { User, Session };","map":{"version":3,"sources":["C:/Users/westb/Documents/PROJET/FuelTracker/client_web/src/utils/Data.js"],"names":["Session","getId","sessionStorage","getItem","getStayConnected","setId","id","setItem","setStayConnected","clean","clear","User","constructor","findAll","users","findById","findIndex","elt","findByToken","token","_findByLogin","username","_findByEmail","email","login","field","is_email","password","stay","userLogged","response","message","nom","logout","passwordReset","console","log","prenom","pays","adresse","statut","role"],"mappings":"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","sourcesContent":["\r\nclass Session {\r\n\r\n    // retourne the token de la session storage\r\n    static getId = () => sessionStorage.getItem('id') || null;\r\n\r\n    // retourne la valeur de stay du session storage\r\n    static getStayConnected = () => sessionStorage.getItem('stay');\r\n\r\n    // modifie le token et l'utilisateur de la session storage\r\n    static setId = (id) => sessionStorage.setItem('id', id);\r\n\r\n    // met à \"true\" stay dans la session storage\r\n    static setStayConnected = () => sessionStorage.setItem('stay', \"true\");\r\n\r\n    // retire le token et l'utilisateur de la session storage\r\n    static clean = () => sessionStorage.clear();\r\n\r\n}\r\n\r\n\r\nclass User {\r\n    constructor() {\r\n        this.users = [\r\n            {\r\n                id: 1, username: \"admin\", password: \"admin\", token: \"token 1\",\r\n                nom: \"nom admin\", prenom: \"prenom admin\", pays: \"Cameroun\", adresse: \"adresse admin\",\r\n                statut: true, role: \"ADMIN\"\r\n            },\r\n\r\n            {\r\n                id: 2, username: \"username 2\", password: \"password 2\", token: \"token 2\",\r\n                nom: \"nom 2\", prenom: \"prenom 2\", pays: \"Cameroun\", adresse: \"adresse 2\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n\r\n            {\r\n                id: 3, username: \"username 3\", password: \"password 3\", token: \"token 3\",\r\n                nom: \"nom 3\", prenom: \"prenom 3\", pays: \"Cameroun\", adresse: \"adresse 3\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n\r\n            {\r\n                id: 4, username: \"username 4\", password: \"password 4\", token: \"token 4\",\r\n                nom: \"nom 4\", prenom: \"prenom 4\", pays: \"Cameroun\", adresse: \"adresse 4\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n\r\n            {\r\n                id: 5, username: \"username 5\", password: \"password 5\", token: \"token 5\",\r\n                nom: \"nom 5\", prenom: \"prenom 5\", pays: \"Cameroun\", adresse: \"adresse 5\",\r\n                statut: true, role: \"USER\"\r\n            },\r\n        ]\r\n    }\r\n\r\n    findAll = () => this.users;\r\n\r\n    findById = id => this.users[this.users.findIndex(elt => elt.id === id)];\r\n\r\n    findByToken = token => this.users[this.users.findIndex(elt => elt.token === token)];\r\n\r\n    _findByLogin = (username) => this.users[this.users.findIndex(elt => elt.username === username)];\r\n    _findByEmail = (email) => this.users[this.users.findIndex(elt => elt.email === email)];\r\n\r\n    login = ([field, is_email], password, stay) => {\r\n        const userLogged = is_email ? this._findByEmail(field) : this._findByLogin(field);\r\n        if (!!userLogged && userLogged.password === password){\r\n            if (stay){\r\n                Session.setStayConnected();\r\n                Session.setId(userLogged.id);\r\n            }\r\n            return {response: true, message: `Bon retour parmi nous ${userLogged.nom}`}\r\n        }\r\n        return {response: false, message: !!userLogged ? \"Mot de passe incorrect\" : \"Nom d'utilisateur ou Email incorrect\"}\r\n    };\r\n\r\n    logout = () => Session.clean();\r\n\r\n    passwordReset = email => console.log(\"Mot de passe changé\")\r\n}\r\n\r\n\r\nexport {User, Session}"]},"metadata":{},"sourceType":"module"}